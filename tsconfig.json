{
    "compilerOptions": {
        /* Visit https://aka.ms/tsconfig to read more about this file */

        /* Language and Environment */
        "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "lib": [
            "ESNext"
        ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
        "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
        "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
        "useDefineForClassFields": true /* Emit ECMAScript-standard-compliant class fields. */,
        "moduleDetection": "auto" /* Control what method is used to detect module-format JS files. */,

        /* Modules */
        "module": "commonjs" /* Specify what module code is generated. */,
        "rootDir": "./src" /* Specify the root folder within your source files. */,
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "resolveJsonModule": true /* Enable importing .json files. */,

        /* Emit */
        "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
        "outDir": "./dist" /* Specify an output folder for all emitted files. */,
        "declarationDir": "./types" /* Specify the output directory for generated declaration files. */,
        "removeComments": false /* Disable emitting comments. */,
        "importHelpers": true /* Allow importing helper functions from tslib once per project, instead of including them per-file. */,
        "noEmitHelpers": true /* Disable generating custom helper functions like '__extends' in compiled output. */,
        "noEmitOnError": true /* Disable emitting files if any type checking errors are reported. */,
        "preserveConstEnums": true /* Disable erasing 'const enum' declarations in generated code. */,

        /* Interop Constraints */
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
        "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
        "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
        "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
        "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
        "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
        "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
        "noUnusedParameters": false /* Raise an error when a function parameter isn't read. */,
        "noUncheckedIndexedAccess": false /* Add 'undefined' to a type when accessed using an index. */,
        "noPropertyAccessFromIndexSignature": false /* Enforces using indexed accessors for keys declared using an indexed type. */,
        "allowUnusedLabels": false /* Disable error reporting for unused labels. */,
        "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,

        /* Completeness */
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },

    "compileOnSave": true,
    "include": ["src"]
}
